#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Telegram API
"""

import asyncio
import json
import logging
from server.services.telegram_api_service import telegram_api_service

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_telegram_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram API"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram API...")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
        print("1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∫–ª–∏–µ–Ω—Ç–∞...")
        is_initialized = await telegram_api_service.initialize_client()
        if is_initialized:
            print("‚úÖ –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞")
            return
        
        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–Ω–∞–ª–µ
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–Ω–∞–ª–µ...")
        channel_info = await telegram_api_service.get_channel_info("giftnews")
        if channel_info:
            print(f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ –ø–æ–ª—É—á–µ–Ω–∞:")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {channel_info['title']}")
            print(f"   Username: {channel_info.get('username')}")
            print(f"   –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {channel_info.get('participants_count', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ")
        
        # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤...")
        posts = await telegram_api_service.fetch_posts("giftnews", limit=5)
        if posts:
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(posts)} –ø–æ—Å—Ç–æ–≤:")
            for i, post in enumerate(posts[:3], 1):
                print(f"   {i}. ID: {post['id']}")
                print(f"      –¢–µ–∫—Å—Ç: {post['text'][:100]}...")
                print(f"      –ú–µ–¥–∏–∞: {'–î–∞' if post['has_media'] else '–ù–µ—Ç'}")
                print(f"      –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {post.get('views', 0)}")
                print()
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç—ã")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
        print("\n4Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã...")
        media_posts = [post for post in posts if post.get('has_media')]
        if media_posts:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(media_posts)} –ø–æ—Å—Ç–æ–≤ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏:")
            for post in media_posts[:2]:
                print(f"   –ü–æ—Å—Ç {post['id']}: {len(post.get('media', []))} –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤")
                for media in post.get('media', []):
                    print(f"     - –¢–∏–ø: {media['type']}, MIME: {media.get('mime_type')}")
        else:
            print("‚ÑπÔ∏è –ü–æ—Å—Ç—ã —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –¢–µ—Å—Ç 5: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ JSON
        print("\n5Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª...")
        test_results = {
            "channel_info": channel_info,
            "posts_count": len(posts),
            "posts_sample": posts[:3] if posts else [],
            "media_posts_count": len(media_posts)
        }
        
        with open("telegram_api_test_results.json", "w", encoding="utf-8") as f:
            json.dump(test_results, f, ensure_ascii=False, indent=2, default=str)
        
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ telegram_api_test_results.json")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        await telegram_api_service.close()
        print("\nüîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram API")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    asyncio.run(test_telegram_api())
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ") 